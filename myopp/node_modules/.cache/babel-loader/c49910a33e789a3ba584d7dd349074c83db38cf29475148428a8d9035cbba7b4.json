{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\Online_Programming_Platform2\\\\Online_Programming_Platform-2\\\\myopp\\\\src\\\\pages\\\\LogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from '../context/UserContext';\n// import { toast, ToastContainer } from 'react-toastify'; // Import toast from react-toastify\nimport 'react-toastify/dist/ReactToastify.css'; // Import the CSS for toastify\nimport StudLogForm from \"../components/Log_Reg_Form/Log_Form/StudLogForm\";\nimport TeachLogForm from \"../components/Log_Reg_Form/Log_Form/TeachLogForm\";\nimport \"../../src/Style/LoginPage/Loginpage.css\";\n// import \"../../src/Style/toastify-notification.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loginType, setLoginType] = useState('student');\n  const {\n    updateUser\n  } = useUser();\n  const handleStudentLogin = async data => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        ...data,\n        role: 'student'\n      });\n      updateUser(response.data.user);\n      // Redirect to the student dashboard with the student's name\n      navigate({\n        pathname: '/student-dashboard',\n        state: {\n          name: response.data.user.name\n        }\n      });\n\n      //  toast.success(\"Login Successfull\");\n    } catch (error) {\n      console.error('Student login error:', error.response.data.message);\n    }\n  };\n  const handleTeacherLogin = async data => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        ...data,\n        role: 'teacher'\n      });\n      updateUser(response.data.user);\n      navigate({\n        pathname: '/teacher-dashboard',\n        state: {\n          name: response.data.user.name\n        }\n      });\n\n      // toast.success(\"Login Successfull\");\n    } catch (error) {\n      console.error('Teacher login error:', error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose login type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: loginType,\n          onChange: e => setLoginType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"teacher\",\n            children: \"Teacher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loginType === 'student' ? /*#__PURE__*/_jsxDEV(StudLogForm, {\n      onLogin: handleStudentLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TeachLogForm, {\n      onLogin: handleTeacherLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(LogPage, \"V9dRhUN59KTv5lph5fYVII3K2/4=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = LogPage;\nexport default LogPage;\nvar _c;\n$RefreshReg$(_c, \"LogPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useUser","StudLogForm","TeachLogForm","jsxDEV","_jsxDEV","LogPage","_s","navigate","loginType","setLoginType","updateUser","handleStudentLogin","data","response","post","role","user","pathname","state","name","error","console","message","handleTeacherLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onLogin","_c","$RefreshReg$"],"sources":["C:/Desktop/Online_Programming_Platform2/Online_Programming_Platform-2/myopp/src/pages/LogPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from '../context/UserContext';\r\n// import { toast, ToastContainer } from 'react-toastify'; // Import toast from react-toastify\r\nimport 'react-toastify/dist/ReactToastify.css'; // Import the CSS for toastify\r\nimport StudLogForm from \"../components/Log_Reg_Form/Log_Form/StudLogForm\";\r\nimport TeachLogForm from \"../components/Log_Reg_Form/Log_Form/TeachLogForm\";\r\nimport \"../../src/Style/LoginPage/Loginpage.css\";\r\n// import \"../../src/Style/toastify-notification.css\";\r\n\r\n\r\nconst LogPage = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [loginType, setLoginType] = useState('student');\r\n  const { updateUser } = useUser();\r\n\r\n\r\n    const handleStudentLogin = async (data) => {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/login', {\r\n            ...data,\r\n            role: 'student',\r\n          });\r\n    \r\n          updateUser(response.data.user);\r\n          // Redirect to the student dashboard with the student's name\r\n          navigate({\r\n          pathname: '/student-dashboard',\r\n          state: { name: response.data.user.name },\r\n         });\r\n\r\n        //  toast.success(\"Login Successfull\");\r\n        } catch (error) {\r\n          console.error('Student login error:', error.response.data.message);\r\n        }\r\n      };\r\n\r\n      const handleTeacherLogin = async (data) => {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/login', {\r\n            ...data,\r\n            role: 'teacher',\r\n          });\r\n    \r\n          updateUser(response.data.user);\r\n          navigate({\r\n            pathname: '/teacher-dashboard',\r\n            state: { name: response.data.user.name },\r\n          });\r\n\r\n          // toast.success(\"Login Successfull\");\r\n        } catch (error) {\r\n          console.error('Teacher login error:', error.response.data.message);\r\n        }\r\n      };\r\n\r\n  return (\r\n    <div className=\"cont\">\r\n      <h2>Login Page</h2>\r\n      <div>\r\n        <label>\r\n          Choose login type:\r\n          <select value={loginType} onChange={(e) => setLoginType(e.target.value)}>\r\n            <option value=\"student\">Student</option>\r\n            <option value=\"teacher\">Teacher</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      {loginType === 'student' ? (\r\n        <StudLogForm onLogin={handleStudentLogin} />\r\n      ) : (\r\n        <TeachLogForm onLogin={handleTeacherLogin} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}